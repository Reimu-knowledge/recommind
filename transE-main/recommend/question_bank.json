{
  "questions": [
    {
      "qid": "Q1",
      "content": "集合A={1,2,3}，集合B={2,3,4}，求A∪B",
      "options": [
        "{1,2,3}",
        "{2,3}",
        "{1,2,3,4}",
        "{4}"
      ],
      "answer": "{1,2,3,4}",
      "knowledge_points": {
        "K1": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q2",
      "content": "下列哪个是自反关系？",
      "options": [
        "R={(1,1),(2,2)}",
        "R={(1,2),(2,1)}",
        "R={(1,1),(1,2)}",
        "R={(2,1)}"
      ],
      "answer": "R={(1,1),(2,2)}",
      "knowledge_points": {
        "K2": 0.8
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q3",
      "content": "在有向图中，顶点的入度定义为？",
      "options": [
        "指向该顶点的边数",
        "从该顶点出发的边数",
        "与该顶点相连的边数",
        "该顶点的标号"
      ],
      "answer": "指向该顶点的边数",
      "knowledge_points": {
        "K8": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q4",
      "content": "无向图G有6个顶点，每个顶点的度数都是3，那么图G有多少条边？",
      "options": [
        "6",
        "9",
        "18",
        "12"
      ],
      "answer": "9",
      "knowledge_points": {
        "K8": 0.7,
        "K9": 0.8
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q5",
      "content": "下列关于树的描述哪个是正确的？",
      "options": [
        "树可以有回路",
        "树是连通的无向图",
        "树的边数等于顶点数",
        "树必须是完全图"
      ],
      "answer": "树是连通的无向图",
      "knowledge_points": {
        "K11": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q6",
      "content": "深度优先搜索(DFS)属于哪种遍历方式？",
      "options": [
        "广度优先",
        "深度优先",
        "随机遍历",
        "层次遍历"
      ],
      "answer": "深度优先",
      "knowledge_points": {
        "K5": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q7",
      "content": "有n个顶点的完全图有多少条边？",
      "options": [
        "n",
        "n-1",
        "n(n-1)/2",
        "n²"
      ],
      "answer": "n(n-1)/2",
      "knowledge_points": {
        "K3": 0.8,
        "K8": 0.6
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q8",
      "content": "图的邻接矩阵是什么？",
      "options": [
        "顶点之间的连接关系矩阵",
        "边的权重矩阵",
        "顶点的度数矩阵",
        "路径长度矩阵"
      ],
      "answer": "顶点之间的连接关系矩阵",
      "knowledge_points": {
        "K4": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q9",
      "content": "连通图是指？",
      "options": [
        "有回路的图",
        "任意两个顶点都有路径相连的图",
        "所有顶点度数相等的图",
        "边数等于顶点数的图"
      ],
      "answer": "任意两个顶点都有路径相连的图",
      "knowledge_points": {
        "K6": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q10",
      "content": "什么是生成子图？",
      "options": [
        "包含原图所有顶点的子图",
        "包含原图所有边的子图",
        "与原图完全相同的图",
        "只包含部分顶点的子图"
      ],
      "answer": "包含原图所有顶点的子图",
      "knowledge_points": {
        "K10": 0.8
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q11",
      "content": "生成树的特点是什么？",
      "options": [
        "包含图的所有顶点且无回路",
        "包含图的所有边",
        "是完全图",
        "有回路"
      ],
      "answer": "包含图的所有顶点且无回路",
      "knowledge_points": {
        "K12": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q12",
      "content": "Kruskal算法用于求解什么问题？",
      "options": [
        "最短路径",
        "最大流",
        "最小生成树",
        "强连通分量"
      ],
      "answer": "最小生成树",
      "knowledge_points": {
        "K13": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q13",
      "content": "欧拉路径的存在条件是什么？",
      "options": [
        "所有顶点度数都是偶数",
        "恰好有0或2个奇度顶点",
        "至少有一个奇度顶点",
        "所有顶点度数都相等"
      ],
      "answer": "恰好有0或2个奇度顶点",
      "knowledge_points": {
        "K15": 0.9,
        "K14": 0.6,
        "K8": 0.4
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q14",
      "content": "哈密顿回路是指？",
      "options": [
        "经过每条边恰好一次的回路",
        "经过每个顶点恰好一次的回路",
        "最短的回路",
        "包含所有边的回路"
      ],
      "answer": "经过每个顶点恰好一次的回路",
      "knowledge_points": {
        "K16": 0.9,
        "K14": 0.5
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q15",
      "content": "Dijkstra算法解决的是什么问题？",
      "options": [
        "最小生成树",
        "单源最短路径",
        "最大匹配",
        "图的着色"
      ],
      "answer": "单源最短路径",
      "knowledge_points": {
        "K18": 0.9,
        "K17": 0.7
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q16",
      "content": "Floyd算法的时间复杂度是？",
      "options": [
        "O(n)",
        "O(n²)",
        "O(n³)",
        "O(n log n)"
      ],
      "answer": "O(n³)",
      "knowledge_points": {
        "K19": 0.9,
        "K17": 0.6
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q17",
      "content": "二分图的定义是什么？",
      "options": [
        "有两个连通分量的图",
        "顶点可以分为两个集合，每条边连接不同集合的顶点",
        "有两种颜色的图",
        "有两个回路的图"
      ],
      "answer": "顶点可以分为两个集合，每条边连接不同集合的顶点",
      "knowledge_points": {
        "K20": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q18",
      "content": "在二分图中，最大匹配的定义是？",
      "options": [
        "边数最多的匹配",
        "权重最大的匹配",
        "包含所有顶点的匹配",
        "连接最多顶点对的匹配"
      ],
      "answer": "边数最多的匹配",
      "knowledge_points": {
        "K21": 0.8,
        "K22": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q19",
      "content": "平面图是指什么？",
      "options": [
        "可以画在平面上且边不相交的图",
        "所有顶点在同一平面的图",
        "只有平行边的图",
        "边数最少的图"
      ],
      "answer": "可以画在平面上且边不相交的图",
      "knowledge_points": {
        "K23": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q20",
      "content": "欧拉公式V-E+F=2适用于什么图？",
      "options": [
        "所有图",
        "树",
        "连通平面图",
        "完全图"
      ],
      "answer": "连通平面图",
      "knowledge_points": {
        "K24": 0.9,
        "K23": 0.6
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q21",
      "content": "图的色数是指什么？",
      "options": [
        "顶点的个数",
        "边的个数",
        "给顶点着色所需的最少颜色数",
        "回路的个数"
      ],
      "answer": "给顶点着色所需的最少颜色数",
      "knowledge_points": {
        "K25": 0.9
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q22",
      "content": "四色定理说明了什么？",
      "options": [
        "任意图都可以用4种颜色着色",
        "平面图最多需要4种颜色着色",
        "完全图需要4种颜色",
        "树需要4种颜色"
      ],
      "answer": "平面图最多需要4种颜色着色",
      "knowledge_points": {
        "K26": 0.9,
        "K25": 0.7,
        "K23": 0.5
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q23",
      "content": "强连通分量是指什么？",
      "options": [
        "有很多边的连通分量",
        "任意两点都有双向路径的最大子图",
        "度数很大的顶点集合",
        "边权重很大的子图"
      ],
      "answer": "任意两点都有双向路径的最大子图",
      "knowledge_points": {
        "K7": 0.9,
        "K6": 0.6
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q24",
      "content": "图的割点是指什么？",
      "options": [
        "度数为1的顶点",
        "删除后使图不连通的顶点",
        "度数最大的顶点",
        "在回路中的顶点"
      ],
      "answer": "删除后使图不连通的顶点",
      "knowledge_points": {
        "K6": 0.7,
        "K3": 0.8
      },
      "difficulty": 0.5
    },
    {
      "qid": "Q25",
      "content": "树的叶子节点是指什么？",
      "options": [
        "根节点",
        "度数为1的顶点",
        "度数最大的顶点",
        "在最深层的顶点"
      ],
      "answer": "度数为1的顶点",
      "knowledge_points": {
        "K11": 0.8,
        "K8": 0.6
      },
      "difficulty": 0.5
    }
  ],
  "metadata": {
    "total_questions": 25,
    "knowledge_points": [
      "K1",
      "K10",
      "K11",
      "K12",
      "K13",
      "K14",
      "K15",
      "K16",
      "K17",
      "K18",
      "K19",
      "K2",
      "K20",
      "K21",
      "K22",
      "K23",
      "K24",
      "K25",
      "K26",
      "K3",
      "K4",
      "K5",
      "K6",
      "K7",
      "K8",
      "K9"
    ],
    "converted_from": "question_bank.csv"
  }
}